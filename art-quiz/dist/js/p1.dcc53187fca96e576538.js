(()=>{"use strict";const t=class{static storeGame(...t){const e={name:t[0],score:t[1],guessedPics:t[2]};localStorage.setItem(`${e.name}`,JSON.stringify(e))}static getGameFromStorage(t){return JSON.parse(localStorage.getItem(t||this.getCategoryFromStorage()))}static storeCategory(t){localStorage.setItem("category",t)}static getCategoryFromStorage(){return localStorage.getItem("category")||"portrait"}static storeGameType(t){localStorage.setItem("gameType",t)}static getGameTypeFromStorage(){return localStorage.getItem("gameType")||"0"}static storeTime(t){localStorage.setItem("time",t)}static getTimeFromStorage(){return localStorage.getItem("time")}static storeMusic(t){localStorage.setItem("music",t)}static getMusicFromStorage(){return localStorage.getItem("music")}static deleteFromStorage(t){localStorage.removeItem(t)}},e=class{constructor(){this.url=""}async render(){const t=await fetch(this.url);return await t.text()}},s=class{constructor(){this.modal="",this.background=document.getElementById("dark-filter")}setModal(){this.modal&&this.modal.classList.toggle("show"),this.background&&this.background.classList.toggle("active")}},r=class extends s{constructor(){super(),this.modal=document.getElementById("settings-modal"),this.switches=document.querySelectorAll(".settings__switch"),this.selectEl=document.getElementById("timer-select"),this.progressEl=document.getElementById("progress-music"),this.render()}renderItem(t,e,s){t&&(s.value=t,this.switches[e].firstElementChild.checked=!0,this.switches[e].classList.toggle("active"))}getSettingsData(){const e=t.getTimeFromStorage(),s=t.getMusicFromStorage();this.renderItem(e,0,this.selectEl),this.renderItem(s,1,this.progressEl)}setSettingsData(){this.switches[0].firstElementChild.checked?t.storeTime(this.selectEl.value):t.deleteFromStorage("time"),this.switches[1].firstElementChild.checked?t.storeMusic(this.progressEl.value):t.deleteFromStorage("music")}render(){this.getSettingsData();for(let t=0;t<this.switches.length;t+=1)this.switches[t].addEventListener("click",(()=>{this.setSettingsData(),this.switches[t].classList.toggle("active")}));this.selectEl.addEventListener("change",(()=>{this.setSettingsData()})),this.progressEl.addEventListener("change",(()=>{this.setSettingsData()}))}},i=class extends e{constructor(){super(),this.url="./views/start.html"}async afterRender(){const e=document.querySelectorAll(".start__btn"),s=document.getElementById("start-settings"),i=document.getElementById("close-settings");for(let s=0;s<e.length;s+=1)e[s].addEventListener("click",(()=>{t.storeGameType(s)}));const a=new r;s.addEventListener("click",(()=>{a.setModal()})),i.addEventListener("click",(()=>{a.setModal()}));const o=document.querySelectorAll(".progress");for(let t=0;t<o.length;t+=1)o[t].addEventListener("input",(function(){const{value:t}=this;this.style.background=`linear-gradient(to right, var(--gold-dark) 0%, var(--gold-dark) ${t}%, var(--gold-light) ${t}%, var(--gold-light) 100%)`}))}},a=class extends s{constructor(t){super(),this.modal=document.getElementById("quiz-modal"),this.img=document.getElementById("quiz-modal-img"),this.text=document.getElementById("quiz-modal-text"),this.icon=document.getElementById("quiz-modal-icon"),this.answer=t,this.setModal(),this.renderModal()}setIcon(){this.icon.classList.remove("uil-check-circle"),this.icon.classList.remove("uil-times-circle"),this.icon.classList.add(`uil-${this.answer.isCorrect?"check":"times"}-circle`)}setPicData(){Object.values(this.answer.data).slice(0,3).forEach(((t,e)=>{this.text.children[e+1].innerText=t}))}renderModal(){this.img.src=`./image-data/img/${this.answer.data.imageNum}.jpg`,this.setIcon(),this.setPicData()}},o=()=>(window.location.hash.slice(1).toLowerCase()||"/").split("/"),n=t=>new Promise((e=>{setTimeout(e,t)})),c={"/":i,"/start":i,"/category":class extends e{constructor(){super(),this.categories="",this.categoriesItem="",this.categoriesScore="",this.url="./views/category.html"}showPlayedCategories(){for(let e=0;e<this.categories.length;e+=1){const s=t.getGameFromStorage(this.categories[e].id);s&&(this.categoriesScore[e].innerText=s.score,this.categoriesItem[e].classList.add("active"),this.categories[e].classList.remove("grey-filter"))}}async afterRender(){this.categories=document.querySelectorAll(".category__pic"),this.categoriesItem=document.querySelectorAll(".category__item"),this.categoriesScore=document.querySelectorAll(".category__description-score"),this.showPlayedCategories();for(let e=0;e<this.categories.length;e+=1){const s=this.categories[e].id,r=this.categoriesScore[e].parentNode;this.categories[e].addEventListener("click",(()=>{t.storeCategory(s)})),r.addEventListener("click",(()=>{t.storeCategory(s)}))}}},"/quiz":class extends e{constructor(){super(),this.categoryType=t.getCategoryFromStorage(),this.gameType=t.getGameTypeFromStorage(),this.body=document.querySelector("body"),this.body.style.overflow="hidden",this.totalAmount=10,this.timer={},this.url=(this.gameType,"./views/quiz.html"),this.imgDataArr=[]}setPagination(t){for(let e=0;e<this.totalAmount;e+=1){const e=document.createElement("div");e.className="quiz__dot",t.appendChild(e)}t.children[0].classList.add("active")}async startQuiz(){try{const t="./image-data/images.json",e=await fetch(t);return(await e.json()).images.filter((t=>t.category===this.categoryType)).slice(0,10)}catch(t){return alert(t),1}}async afterRender(){const e=document.querySelectorAll(".quiz__btn"),s=document.querySelector(".quiz__pagination"),r=document.getElementById("quiz-next-btn"),i=document.getElementById("quit-game");this.setPagination(s),this.imgDataArr=await this.startQuiz();const o=this.imgDataArr.map((t=>new class{constructor(t){this.data=t,this.correctAnswer=t.author,this.isCorrect=!1}async getAnswers(){return this.shuffleAnswers(await this.setAnswers())}getRandomIndex(t){return Math.floor(Math.random()*t)}async setAnswers(){const t=await fetch("./image-data/images.json"),e=await t.json(),s=[];s.push(this.correctAnswer);let r=0;for(;r<3;){const t=this.getRandomIndex(e.images.length),i=e.images[t].author;i!==this.correctAnswer&&(s.push(i),r+=1)}return s}shuffleAnswers(t){const e=t;for(let s=t.length-1;s>0;s-=1){const t=this.getRandomIndex(s),r=e[s];e[s]=e[t],e[t]=r}return e}isAnswerCorrect(t){if(t){const e=t.childNodes[1];this.isCorrect=e.textContent===this.correctAnswer}else this.isCorrect=!1}}(t))),n=new class{constructor(t){this.correctNumElement=document.querySelector(".quiz__navbar-answers-correct"),this.quizImg=document.getElementById("quiz__img"),this.pagination=document.querySelector(".quiz__pagination"),this.answerElements=document.querySelectorAll(".quiz__btn"),this.answers=t,this.totalAmount=10,this.answeredAmount=0,this.correctAmount=0,this.quizModal={},this.final={}}setQuestionImage(t){const e=new Image;e.src=t,e.onload=()=>{this.quizImg.style.backgroundImage=`url(${t})`}}async renderQuestion(){const t=this.answers[this.answeredAmount],e=await t.getAnswers(),s=`./image-data/img/${t.data.imageNum}.jpg`;this.setQuestionImage(s);for(let t=0;t<this.answerElements.length;t+=1)this.answerElements[t].innerHTML=`<input type="radio" name="radio"><span class="checkmark">${e[t]}</span>`}nextQuestion(){const{isCorrect:t}=this.answers[this.answeredAmount],e=t?"right":"wrong";this.pagination.children[this.answeredAmount].classList.replace("active",e),this.answeredAmount+=1,this.answeredAmount<this.totalAmount?(this.renderQuestion(),this.pagination.children[this.answeredAmount].classList.add("active")):this.endQuiz(),0!==Object.keys(this.quizModal).length&&this.quizModal.setModal()}showResult(t){const e=this.answers[this.answeredAmount];e.isAnswerCorrect(t),this.quizModal=new a(e),e.isCorrect&&(this.correctAmount+=1,this.correctNumElement.innerText=this.correctAmount)}storeResults(){const e=t.getCategoryFromStorage(),s=`${this.correctAmount}/${this.totalAmount}`;t.storeGame(e,s,this.answers)}endQuiz(){this.storeResults(),window.location.hash="#final"}}(o);this.timer=new class{constructor(t){this.question=t,this.timerText=document.getElementById("quiz-time-text"),this.timerBlock=this.timerText.parentNode,this.timer=""}clearTimer(){this.timer&&clearInterval(this.timer)}formatTime(t){return"00:"+(t<10?"0":"")+t}showTimer(){this.clearTimer();let e=t.getTimeFromStorage();if(!e)return void this.timerBlock.classList.add("hide");let s="";this.timer=setInterval((()=>{e-=1,s=this.formatTime(e),this.timerText.textContent=s,e<=0&&(clearInterval(this.timer),this.question.showResult())}),1e3)}}(n),this.timer.showTimer();for(let t=0;t<=e.length-1;t+=1){const s=e[t];s.addEventListener("click",(()=>{s.firstChild.checked&&(n.showResult(s),this.timer.clearTimer())}))}r.addEventListener("click",(()=>{this.timer.showTimer(),n.nextQuestion()})),i.addEventListener("click",(()=>{this.timer.clearTimer(),this.body.style.overflow=""})),await n.renderQuestion()}},"/score":class extends e{constructor(){super(),this.scoreContainer="",this.categoryType=t.getCategoryFromStorage(),this.url="./views/score.html"}getResults(){return t.getGameFromStorage(this.categoryType)}createImg(t){const{author:e,name:s,year:r,imageNum:i}=t.data,a=document.createElement("div");return t.isCorrect?a.className="score__pic":a.className="score__pic grey-filter",a.innerHTML=`<i class="uit uit-star"></i>\n                    <div class="score__text">\n                      <p class="score__text-author">${e}</p>\n                      <p>${s}, ${r}</p>\n                    </div>`,a.style=`background-image: url(./image-data/img/${i}.jpg);`,a}createAnswersGrid(t){for(let e=0;e<t.length;e+=1)this.scoreContainer.append(this.createImg(t[e]))}async afterRender(){const t=document.getElementById("navbar-score");this.scoreContainer=document.getElementById("score-container");const{score:e,guessedPics:s}=this.getResults();t.innerText=e,this.createAnswersGrid(s)}},"/final":class extends e{constructor(){super(),this.url="./views/final.html"}setContent(e){const s=e,{score:r}=t.getGameFromStorage();s.innerHTML=r}async afterRender(){const e=document.getElementById("final-score"),s=document.getElementById("next-game");this.setContent(e),s.addEventListener("click",(()=>{(new class{constructor(){this.arr=["portrait","landscape","marine","impressionism","expressionism","avant-garde","renaissance","surrealism","realism","romaticism"]}nextCategory(){const e=t.getCategoryFromStorage(),s=this.arr.indexOf(e)+1;s<this.arr.length?t.storeCategory(this.arr[s]):t.storeCategory(this.arr[0])}}).nextCategory()}))}}},l=async()=>{const t=document.getElementById("app"),e=o()[0],s=new(0,c[e?`/${e}`:"/"]);t.classList.add("hide"),await n(500),t.innerHTML=await s.render(),t.classList.remove("hide"),await s.afterRender()};window.addEventListener("hashchange",l),window.addEventListener("load",l),console.log("\nВаша оценка - 200 баллов\n\nFeedback: доп фичи не реализовала, регулятор громкости есть, но не рабочий, второго вида квиза нет (мб здесь нужно больше баллов отнять - я отняла только 10, с другой стороны по оценке именно часть вопросов не так много и говорится именно про функционал именно двух игр)\n\nАнимации: \n1. звездочки на стартовой странице\n2. выезд окна настроек\n3. выезд модального меню\n4. движение свитчей в настройках \n\nОтзыв по пунктам ТЗ:\n\nНе выполненные/не засчитанные пункты:\n\n1) в настройках есть возможность включать/выключать звук, есть регулятор громкости звука. Если звук включён, есть звуковая индикация правильных и неправильных ответов, звуковое сопровождение окончания раунда\n\n2) дополнительными баллами оценивается очень высокое качество оформления приложения, продуманность отдельных деталей интерфейса, улучшающие внешний вид приложения и удобство пользования им, а также выполненный на высоком уровне и сложный в реализации свой собственный дополнительный функционал, существенно улучшающий качество и/или возможности приложения\n\nЧастично выполненные пункты:\n\n1) вёрстка, дизайн, UI страницы с вопросами. Выполняются требования к вёрстке и оформлению приложения. Вопросы в викторине идут в том порядке, в каком информация про картины и их авторов размещается в коллекции исходных данных.\n\n2) варианты ответов на вопросы генерируются случайным образом. В вариантах ответов на вопросы викторины должен быть правильный ответ и только один. Правильный ответ в разных вопросах должен находиться на разных местах, а не, например, всегда быть только первым. Варианты ответов должны быть разными. В вариантах ответов не должны повторяться картины одного и того же художника.")})();